<?php

/**
 * @file
 * Module file for the aws_sns module.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_insert().
 */
function aws_sns_entity_insert(EntityInterface $entity) {
  aws_sns_send_message($entity, 'insert');
}

/**
 * Implements hook_entity_update().
 */
function aws_sns_entity_update(EntityInterface $entity) {
  aws_sns_send_message($entity, 'update');
}

/**
 * Implements hook_entity_delete().
 */
function aws_sns_entity_delete(EntityInterface $entity) {
  aws_sns_send_message($entity, 'delete');
}

/**
 * Sends a message to SNS.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The entity object.
 * @param string $op
 *   The operation the entity is undergoing.
 */
function aws_sns_send_message(EntityInterface $entity, $op) {
  /** @var \Drupal\Core\Config\ImmutableConfig $config */
  $config = \Drupal::config('aws_sns.settings');
  $topics = $config->get('topics') ?? [];
  $entity_settings = $config->get('enabled_sns_entities');
  $bundle = $entity->bundle();

  foreach ($topics as $topic => $arn) {
    $topic_settings = $entity_settings[$topic];
    foreach ($topic_settings as $entity_type => $settings) {
      if (!array_key_exists($settings, $bundle) || !array_key_exists($settings[$bundle]['ops'], $op)) {
        continue;
      }

      if ($settings[$bundle]['ops'][$op]) {
        $message = [
          'entity_id' => $entity->id(),
          'entity_type' => $entity->getEntityTypeId(),
          'bundle' => $bundle,
          'op' => $op,
          'changed' => time(),
        ];
        \Drupal::service('aws_sns')->sendMessage($arn, $message);
        \Drupal::logger('aws_sns.module')->debug('Sent messagefor entity @entity_id for topic @topic', [
          '@entity_id' => $entity->id(),
          '@topic' => $topic,
        ]);
      }
    }
  }

}
